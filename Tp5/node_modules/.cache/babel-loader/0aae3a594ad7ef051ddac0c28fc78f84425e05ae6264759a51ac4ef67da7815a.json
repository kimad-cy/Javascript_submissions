{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EditJob from \"@/components/EditJob.vue\";\nexport default {\n  components: {\n    EditJob\n  },\n  data() {\n    return {\n      jobs: [],\n      showDetail: new Array(8).fill(false),\n      selectedJob: null\n    };\n  },\n  methods: {\n    deleteJob(id) {\n      if (confirm(\"Do you want to delete this job?\")) {\n        let index = this.jobs.findIndex(job => job.id === id);\n        if (index !== -1) {\n          this.jobs.splice(index, 1);\n        }\n      }\n    },\n    toggleDetail(id) {\n      this.showDetail[id] = !this.showDetail[id];\n    },\n    editJob(job) {\n      if (!job) {\n        this.selectedJob = {\n          \"id\": this.jobs.length + 1,\n          \"titre\": \"\",\n          \"description\": \"\",\n          \"salaire\": \"\",\n          \"date_creation\": \"\",\n          \"localisation\": \"\",\n          \"type_contrat\": \"\"\n        };\n      } else {\n        this.selectedJob = job;\n      }\n      // Open the edit form\n    },\n    updateJob(updatedJob) {\n      let index = this.jobs.findIndex(job => job.id === updatedJob.id);\n      if (index !== -1) {\n        this.jobs[index] = updatedJob;\n        alert(\"Job modified!\");\n      } else {\n        this.jobs.push(updatedJob);\n        alert(\"Job Added!\");\n      }\n      this.selectedJob = null; // Close form after saving\n    }\n  },\n  mounted() {\n    fetch(\"/jobsApp.json\").then(response => response.json()).then(data => {\n      this.jobs = data;\n    }).catch(error => console.error(\"Error loading JSON:\", error));\n  }\n};","map":{"version":3,"names":["EditJob","components","data","jobs","showDetail","Array","fill","selectedJob","methods","deleteJob","id","confirm","index","findIndex","job","splice","toggleDetail","editJob","length","updateJob","updatedJob","alert","push","mounted","fetch","then","response","json","catch","error","console"],"sources":["/workspaces/Javascript_submissions/Tp5/src/components/HomePage.vue"],"sourcesContent":["<template>\r\n    <div class=\"home\">\r\n      <div class=\"header\">\r\n        <h1>emploi.ma</h1>\r\n        <button class=\"addJob\" @click=\"editJob(0)\">Ajouter un emploi</button>\r\n      </div>\r\n      <span style=\"margin-bottom: 17px; text-align: left;\">* Click on job to see description, click again to go back.</span>\r\n      <br><br>\r\n      <div class=\"container\">\r\n        <section class=\"job-card\" v-for=\"job in jobs\" :key=\"job.id\" @click=\"toggleDetail(job.id)\" >\r\n          <div v-if=\"!showDetail[job.id]\">\r\n            <span>{{ job.titre }} </span><br><br>\r\n           <button @click=\"editJob(job)\">Modifier</button>\r\n           <button @click=\"deleteJob(job.id)\">Supprimer</button>\r\n          </div>\r\n          <div v-if=\"showDetail[job.id]\">\r\n            <span>Description:</span> {{ job.description }} <br>\r\n           <span>Salaire:</span> {{ job.salaire }} <br>\r\n           <span>Contrat:</span> {{ job.type_contrat }} <br><br>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <EditJob v-if=\"selectedJob\" \r\n             :job=\"selectedJob\" \r\n             @update-job=\"updateJob\"\r\n             @close=\"selectedJob = null\" />\r\n    </div>\r\n</template>\r\n<script>\r\nimport EditJob from \"@/components/EditJob.vue\";\r\nexport default{\r\n  components: { EditJob },\r\n  data(){\r\n    return{\r\n      jobs: [],\r\n      showDetail: new Array(8).fill(false),\r\n      selectedJob: null\r\n    }\r\n  },\r\n  methods: {\r\n    deleteJob(id) {\r\n      if (confirm(\"Do you want to delete this job?\")) {\r\n        let index = this.jobs.findIndex(job => job.id === id);\r\n        if (index !== -1) {\r\n          this.jobs.splice(index, 1);\r\n        }\r\n      }\r\n    },\r\n    toggleDetail(id){\r\n      this.showDetail[id] = !this.showDetail[id];   \r\n    },\r\n    editJob(job) {\r\n      if(!job){\r\n        this.selectedJob = {\r\n          \"id\":this.jobs.length +1 ,\r\n          \"titre\": \"\",\r\n          \"description\": \"\",\r\n          \"salaire\": \"\",\r\n          \"date_creation\": \"\",\r\n          \"localisation\": \"\",\r\n          \"type_contrat\": \"\"\r\n        };\r\n      }else{\r\n        this.selectedJob = job;\r\n      }\r\n       // Open the edit form\r\n    },\r\n    updateJob(updatedJob) {\r\n      let index = this.jobs.findIndex(job => job.id === updatedJob.id);\r\n      if (index !== -1) {\r\n        this.jobs[index] = updatedJob;\r\n        alert(\"Job modified!\");\r\n      }else{\r\n        this.jobs.push(updatedJob);\r\n        alert(\"Job Added!\");\r\n      }\r\n      this.selectedJob = null; // Close form after saving\r\n    }\r\n  \r\n  },\r\n  mounted() {\r\n      fetch(\"/jobsApp.json\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.jobs= data; \r\n        })\r\n        .catch(error => console.error(\"Error loading JSON:\", error));\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n.header,.addJob{\r\n  font-family:Verdana, Geneva, Tahoma, sans-serif;\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  height: 60px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  justify-content:space-between;\r\n  display: flex;\r\n  padding: 4px;\r\n}\r\n.addJob{\r\n  font-weight: bold;\r\n  width: 100px;\r\n}\r\nspan{\r\n  font-weight: bold;\r\n}\r\n.container{\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: auto;\r\n  gap: 10px;\r\n  justify-content: center;\r\n}\r\n.job-card{\r\n  font-family:Verdana, Geneva, Tahoma, sans-serif;\r\n  border-style: solid;\r\n  border-radius: 10px;\r\n  height: 190px;\r\n  width: 290px;\r\n  margin-bottom: 10px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  padding: 6px;\r\n  cursor: pointer;\r\n}\r\n.job-card:hover{\r\n  background-color:#2c3e50;\r\n  color: white;\r\n  transition: ease-in 0.3s;\r\n  transform: translateY(-5px);\r\n  box-shadow: 4px 4px 20px rgba(0, 0, 0, 0.4);}\r\nbutton{\r\n  height: 34px;\r\n  width: 80px;\r\n  margin-right: 4px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  background-color: rgb(205, 77, 8);\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n</style>"],"mappings":";AA6BA,OAAOA,OAAM,MAAO,0BAA0B;AAC9C,eAAc;EACZC,UAAU,EAAE;IAAED;EAAQ,CAAC;EACvBE,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MACpCC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,EAAE,EAAE;MACZ,IAAIC,OAAO,CAAC,iCAAiC,CAAC,EAAE;QAC9C,IAAIC,KAAI,GAAI,IAAI,CAACT,IAAI,CAACU,SAAS,CAACC,GAAE,IAAKA,GAAG,CAACJ,EAAC,KAAMA,EAAE,CAAC;QACrD,IAAIE,KAAI,KAAM,CAAC,CAAC,EAAE;UAChB,IAAI,CAACT,IAAI,CAACY,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QAC5B;MACF;IACF,CAAC;IACDI,YAAYA,CAACN,EAAE,EAAC;MACd,IAAI,CAACN,UAAU,CAACM,EAAE,IAAI,CAAC,IAAI,CAACN,UAAU,CAACM,EAAE,CAAC;IAC5C,CAAC;IACDO,OAAOA,CAACH,GAAG,EAAE;MACX,IAAG,CAACA,GAAG,EAAC;QACN,IAAI,CAACP,WAAU,GAAI;UACjB,IAAI,EAAC,IAAI,CAACJ,IAAI,CAACe,MAAK,GAAG;UACvB,OAAO,EAAE,EAAE;UACX,aAAa,EAAE,EAAE;UACjB,SAAS,EAAE,EAAE;UACb,eAAe,EAAE,EAAE;UACnB,cAAc,EAAE,EAAE;UAClB,cAAc,EAAE;QAClB,CAAC;MACH,CAAC,MAAI;QACH,IAAI,CAACX,WAAU,GAAIO,GAAG;MACxB;MACC;IACH,CAAC;IACDK,SAASA,CAACC,UAAU,EAAE;MACpB,IAAIR,KAAI,GAAI,IAAI,CAACT,IAAI,CAACU,SAAS,CAACC,GAAE,IAAKA,GAAG,CAACJ,EAAC,KAAMU,UAAU,CAACV,EAAE,CAAC;MAChE,IAAIE,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACT,IAAI,CAACS,KAAK,IAAIQ,UAAU;QAC7BC,KAAK,CAAC,eAAe,CAAC;MACxB,CAAC,MAAI;QACH,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAACF,UAAU,CAAC;QAC1BC,KAAK,CAAC,YAAY,CAAC;MACrB;MACA,IAAI,CAACd,WAAU,GAAI,IAAI,EAAE;IAC3B;EAEF,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACNC,KAAK,CAAC,eAAe,EAClBC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACvB,IAAG,IAAK;MACZ,IAAI,CAACC,IAAI,GAAED,IAAI;IACjB,CAAC,EACA0B,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAClE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}